{{- if .Values.speaker.enabled }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ template "metallb.fullname" . }}-speaker
  namespace: {{ .Release.Namespace | default .Values.defaultNamespace | quote }}
  labels:
    {{- include "metallb.labels" . | nindent 4 }}
    app.kubernetes.io/component: speaker
    {{- range $key, $value := .Values.speaker.labels }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
spec:
  {{- if .Values.speaker.updateStrategy }}
  updateStrategy: {{- toYaml .Values.speaker.updateStrategy | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "metallb.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: speaker
  template:
    metadata:
      {{- if or .Values.prometheus.scrapeAnnotations .Values.speaker.podAnnotations }}
      annotations:
        {{- if .Values.prometheus.scrapeAnnotations }}
        prometheus.io/scrape: "true"
        {{- if not .Values.speaker.frr.enabled }}
        prometheus.io/port: "{{ .Values.prometheus.metricsPort }}"
        {{- end }}
        {{- end }}
        {{- with .Values.speaker.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
      labels:
        {{- include "metallb.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: speaker
        {{- range $key, $value := .Values.speaker.labels }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
    spec:
      {{- if .Values.speaker.runtimeClassName }}
      runtimeClassName: {{ .Values.speaker.runtimeClassName }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ template "metallb.speaker.serviceAccountName" . }}
      terminationGracePeriodSeconds: 0
      hostNetwork: true
      volumes:
      containers:
      - name: speaker
        image: {{ .Values.sourceRegistry }}/{{ .Values.speaker.image.repository }}@{{ .Values.speaker.image.digest }}
        {{- if .Values.speaker.image.pullPolicy }}
        imagePullPolicy: {{ .Values.speaker.image.pullPolicy }}
        {{- end }}
        {{- if .Values.speaker.command }}
        command:
          - {{ .Values.speaker.command }}
        {{- end }}
        args:
        - --port={{ .Values.prometheus.metricsPort }}
        {{- with .Values.speaker.logLevel }}
        - --log-level={{ . }}
        {{- end }}
        {{- if .Values.loadBalancerClass }}
        - --lb-class={{ .Values.loadBalancerClass }}
        {{- end }}
        env:
        - name: METALLB_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: METALLB_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        {{- if .Values.speaker.memberlist.enabled }}
        - name: METALLB_ML_BIND_ADDR
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: METALLB_ML_LABELS
          value: "app.kubernetes.io/name={{ include "metallb.name" . }},app.kubernetes.io/component=speaker"
        - name: METALLB_ML_BIND_PORT
          value: "{{ .Values.speaker.memberlist.mlBindPort }}"
        - name: METALLB_ML_SECRET_KEY_PATH
          value: "{{ .Values.speaker.memberlist.mlSecretKeyPath }}"
        {{- end }}
        ports:
        - name: monitoring
          containerPort: {{ .Values.prometheus.metricsPort }}
        {{- if .Values.speaker.memberlist.enabled }}
        - name: memberlist-tcp
          containerPort: {{ .Values.speaker.memberlist.mlBindPort }}
          protocol: TCP
        - name: memberlist-udp
          containerPort: {{ .Values.speaker.memberlist.mlBindPort }}
          protocol: UDP
        {{- end }}
        {{- if .Values.speaker.livenessProbe.enabled }}
        livenessProbe:
          httpGet:
            path: /metrics
            port: monitoring
          initialDelaySeconds: {{ .Values.speaker.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.speaker.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.speaker.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.speaker.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.speaker.livenessProbe.failureThreshold }}
        {{- end }}
        {{- if .Values.speaker.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            path: /metrics
            port: monitoring
          initialDelaySeconds: {{ .Values.speaker.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.speaker.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.speaker.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.speaker.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.speaker.readinessProbe.failureThreshold }}
        {{- end }}
        {{- with .Values.speaker.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
            add:
            - NET_RAW
      nodeSelector:
        "kubernetes.io/os": linux
        {{- with .Values.speaker.nodeSelector }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.speaker.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if or .Values.speaker.tolerateMaster .Values.speaker.tolerations }}
      tolerations:
      {{- if .Values.speaker.tolerateMaster }}
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
        operator: Exists
      - key: node-role.kubernetes.io/control-plane
        effect: NoSchedule
        operator: Exists        
      {{- end }}
      {{- with .Values.speaker.tolerations }}
        {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- end }}
      {{- with .Values.speaker.priorityClassName }}
      priorityClassName: {{ . | quote }}
      {{- end }}
{{- end }}
